function [s1, s2, s3, s4, s5, s6, s7, s8, s9]= fourthOrder(x1, x2, x3, x4, x5, position)
if position == 1
    x  = x1;
    s1 = -(3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x2*x3 - 2*x*x2*x4 - 2*x*x2*x5 - 2*x*x3*x4 - 2*x*x3*x5 - 2*x*x4*x5 ...
        + x2*x3*x4 + x2*x3*x5 + x2*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x1 - x3)*(x1 - x4)*(x1 - x5));
    s2 = (3*x^2*x1 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x3*x4 - 2*x*x3*x5 + x1*x3*x4 ...
        - 2*x*x4*x5 + x1*x3*x5 + x1*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x2 - x3)*(x2 - x4)*(x2 - x5));
    s3 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x2*x4 - 2*x*x2*x5 + x1*x2*x4 ...
        + x1*x2*x5 - 2*x*x4*x5 + x1*x4*x5 + x2*x4*x5) ...
        /((x1 - x3)*(x2 - x3)*(x3 - x4)*(x3 - x5));
    s4 = (3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x2*x3 - 2*x*x1*x5 + x1*x2*x3 - 2*x*x2*x5 ...
        - 2*x*x3*x5 + x1*x2*x5 + x1*x3*x5 + x2*x3*x5) ...
        /((x1 - x4)*(x2 - x4)*(x3 - x4)*(x4 - x5));
    s5 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x2*x3 - 2*x*x2*x4 + x1*x2*x3 ...
        - 2*x*x3*x4 + x1*x2*x4 + x1*x3*x4 + x2*x3*x4) ...
        /((x1 - x5)*(x2 - x5)*(x3 - x5)*(x4 - x5));
    s6 = 0;
    s7 = 0;
    s8 = 0;
    s9 = 0;
elseif position == 2;
    x  = x2;
    s1 = 0;
    s2 = -(3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x2*x3 - 2*x*x2*x4 - 2*x*x2*x5 - 2*x*x3*x4 - 2*x*x3*x5 - 2*x*x4*x5 ...
        + x2*x3*x4 + x2*x3*x5 + x2*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x1 - x3)*(x1 - x4)*(x1 - x5));
    s3 = (3*x^2*x1 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x3*x4 - 2*x*x3*x5 + x1*x3*x4 ...
        - 2*x*x4*x5 + x1*x3*x5 + x1*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x2 - x3)*(x2 - x4)*(x2 - x5));
    s4 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x2*x4 - 2*x*x2*x5 + x1*x2*x4 ...
        + x1*x2*x5 - 2*x*x4*x5 + x1*x4*x5 + x2*x4*x5) ...
        /((x1 - x3)*(x2 - x3)*(x3 - x4)*(x3 - x5));
    s5 = (3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x2*x3 - 2*x*x1*x5 + x1*x2*x3 - 2*x*x2*x5 ...
        - 2*x*x3*x5 + x1*x2*x5 + x1*x3*x5 + x2*x3*x5) ...
        /((x1 - x4)*(x2 - x4)*(x3 - x4)*(x4 - x5));
    s6 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x2*x3 - 2*x*x2*x4 + x1*x2*x3 ...
        - 2*x*x3*x4 + x1*x2*x4 + x1*x3*x4 + x2*x3*x4) ...
        /((x1 - x5)*(x2 - x5)*(x3 - x5)*(x4 - x5));
    s7 = 0;
    s8 = 0;
    s9 = 0;    
elseif position == 3;
    x  = x3;
    s1 = 0;
    s2 = 0;
    s3 = -(3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x2*x3 - 2*x*x2*x4 - 2*x*x2*x5 - 2*x*x3*x4 - 2*x*x3*x5 - 2*x*x4*x5 ...
        + x2*x3*x4 + x2*x3*x5 + x2*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x1 - x3)*(x1 - x4)*(x1 - x5));
    s4 = (3*x^2*x1 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x3*x4 - 2*x*x3*x5 + x1*x3*x4 ...
        - 2*x*x4*x5 + x1*x3*x5 + x1*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x2 - x3)*(x2 - x4)*(x2 - x5));
    s5 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x2*x4 - 2*x*x2*x5 + x1*x2*x4 ...
        + x1*x2*x5 - 2*x*x4*x5 + x1*x4*x5 + x2*x4*x5) ...
        /((x1 - x3)*(x2 - x3)*(x3 - x4)*(x3 - x5));
    s6 = (3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x2*x3 - 2*x*x1*x5 + x1*x2*x3 - 2*x*x2*x5 ...
        - 2*x*x3*x5 + x1*x2*x5 + x1*x3*x5 + x2*x3*x5) ...
        /((x1 - x4)*(x2 - x4)*(x3 - x4)*(x4 - x5));
    s7 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x2*x3 - 2*x*x2*x4 + x1*x2*x3 ...
        - 2*x*x3*x4 + x1*x2*x4 + x1*x3*x4 + x2*x3*x4) ...
        /((x1 - x5)*(x2 - x5)*(x3 - x5)*(x4 - x5));
    s8 = 0;
    s9 = 0;    
elseif position == 4;
    x  = x4;
    s1 = 0;
    s2 = 0;
    s3 = 0;
    s4 = -(3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x2*x3 - 2*x*x2*x4 - 2*x*x2*x5 - 2*x*x3*x4 - 2*x*x3*x5 - 2*x*x4*x5 ...
        + x2*x3*x4 + x2*x3*x5 + x2*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x1 - x3)*(x1 - x4)*(x1 - x5));
    s5 = (3*x^2*x1 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x3*x4 - 2*x*x3*x5 + x1*x3*x4 ...
        - 2*x*x4*x5 + x1*x3*x5 + x1*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x2 - x3)*(x2 - x4)*(x2 - x5));
    s6 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x2*x4 - 2*x*x2*x5 + x1*x2*x4 ...
        + x1*x2*x5 - 2*x*x4*x5 + x1*x4*x5 + x2*x4*x5) ...
        /((x1 - x3)*(x2 - x3)*(x3 - x4)*(x3 - x5));
    s7 = (3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x2*x3 - 2*x*x1*x5 + x1*x2*x3 - 2*x*x2*x5 ...
        - 2*x*x3*x5 + x1*x2*x5 + x1*x3*x5 + x2*x3*x5) ...
        /((x1 - x4)*(x2 - x4)*(x3 - x4)*(x4 - x5));
    s8 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x2*x3 - 2*x*x2*x4 + x1*x2*x3 ...
        - 2*x*x3*x4 + x1*x2*x4 + x1*x3*x4 + x2*x3*x4) ...
        /((x1 - x5)*(x2 - x5)*(x3 - x5)*(x4 - x5));
    s9 = 0;
else
    x  = x5;
    s1 = 0;
    s2 = 0;
    s3 = 0;
    s4 = 0;
    s5 = -(3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x2*x3 - 2*x*x2*x4 - 2*x*x2*x5 - 2*x*x3*x4 - 2*x*x3*x5 - 2*x*x4*x5 ...
        + x2*x3*x4 + x2*x3*x5 + x2*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x1 - x3)*(x1 - x4)*(x1 - x5));
    s6 = (3*x^2*x1 + 3*x^2*x3 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x3*x4 - 2*x*x3*x5 + x1*x3*x4 ...
        - 2*x*x4*x5 + x1*x3*x5 + x1*x4*x5 + x3*x4*x5) ...
        /((x1 - x2)*(x2 - x3)*(x2 - x4)*(x2 - x5));
    s7 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x4 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x4 - 2*x*x1*x5 - 2*x*x2*x4 - 2*x*x2*x5 + x1*x2*x4 ...
        + x1*x2*x5 - 2*x*x4*x5 + x1*x4*x5 + x2*x4*x5) ...
        /((x1 - x3)*(x2 - x3)*(x3 - x4)*(x3 - x5));
    s8 = (3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x5 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x2*x3 - 2*x*x1*x5 + x1*x2*x3 - 2*x*x2*x5 ...
        - 2*x*x3*x5 + x1*x2*x5 + x1*x3*x5 + x2*x3*x5) ...
        /((x1 - x4)*(x2 - x4)*(x3 - x4)*(x4 - x5));
    s9 = -(3*x^2*x1 + 3*x^2*x2 + 3*x^2*x3 + 3*x^2*x4 - 4*x^3 ...
        - 2*x*x1*x2 - 2*x*x1*x3 - 2*x*x1*x4 - 2*x*x2*x3 - 2*x*x2*x4 + x1*x2*x3 ...
        - 2*x*x3*x4 + x1*x2*x4 + x1*x3*x4 + x2*x3*x4) ...
        /((x1 - x5)*(x2 - x5)*(x3 - x5)*(x4 - x5));
    
end

end